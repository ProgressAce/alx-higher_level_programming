
============================
How to use 4-print_square.py
============================

This module defines a function called print_square.

``print_square(size)`` - prints a square using a # character with a size of:
    size by size.


Usage:
======

Importing function from the module:
~
    >>> print_square = __import__('4-print_square').print_square

The function only accepts an integer argument.
~
~
    >>> print_square = __import__('4-print_square').print_square

    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(2)
    ##
    ##

    >>> print_square(1)
    #

If integer arguments is 0, then a new line is printed.
~
~
    >>> print_square(0)
    <BLANKLINE>

If the function receives a non-integer argument, then a TypeError exception is
raised.
~
~
    >>> print_square("John Doe")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(2.3)
    Traceback (most recent call last):
    TypeError: size must be an integer

If the integer argument is less than 0, then a ValueError exception is raised.
~
~
    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

If an infinity number is received, then a TypeError exception is raised
~
~
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    TypeError: size must be an integer

Note that a TypeError is checked before a ValueError.
~
~
    >>> print_square(-4.5)
    Traceback (most recent call last):
    TypeError: size must be an integer
